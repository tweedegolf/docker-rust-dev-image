name: Docker

on:
  workflow_call:

jobs:
  prebuild_binaries:
    runs-on: ubuntu-latest
    steps:
      - name: Setup multi-arch for arm64 and install libpq
        run: |
          cat /etc/apt/sources.list
          sudo dpkg --add-architecture arm64
          sudo apt update
          sudo apt install libpq-dev:arm64


      - name: Setup packaging tools for cross compiled artifacts
        uses: awalsh128/cache-apt-pkgs-action@a6c3917cc929dd0345bfb2d3feaf9101823370ad # v1.4.2
        with:
          packages: qemu-user-static crossbuild-essential-arm64
          version: 1

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@7164405e8653277d57afd42ba081b5aa02a70396
        with:
          toolchain: stable
          targets: x86_64-unknown-linux-gnu,aarch64-unknown-linux-gnu

      - name: Install development tools
        uses: taiki-e/install-action@f8a64c940979268d3ab5ac99c178e718ed90977d # v2.32.14
        with:
          tool: cargo-clone

      - name: Download diesel_cli
        run: cargo clone diesel_cli

      - name: Build diesel_cli
        run: |
          export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=/usr/bin/aarch64-linux-gnu-gcc
          cd diesel_cli
          cat Cargo.toml
          cargo build --target aarch64-unknown-linux-gnu --no-default-features --features "postgres, sqlite-bundled"

  # build:
  #   strategy:
  #     matrix:
  #       include:
  #         - version: stable
  #           latest: false
  #         - version: beta
  #           latest: false
  #         - version: nightly
  #           latest: false
  #         - version: 1.77
  #           latest: true
  #         - version: 1.76
  #           latest: false
  #   uses: "./.github/workflows/docker-images.yml"
  #   with:
  #       version: ${{ matrix.version }}
  #       latest: ${{ matrix.latest }}
  #       node_version: "20"
