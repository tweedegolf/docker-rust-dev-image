name: Docker

on:
  workflow_call:

jobs:
  prebuild-diesel:
    strategy:
      matrix:
        include:
          - rust_arch: aarch64-unknown-linux-gnu
            docker_arch: arm64
          - rust_arch: x86_64-unknown-linux-gnu
            docker_arch: amd64
    runs-on: ubuntu-latest
    steps:
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@d8352f6b1d2e870bc5716e7a6d9b65c4cc244a1a
        with:
          toolchain: stable

      - name: Install development tools
        uses: taiki-e/install-action@d0c2bb4cffa2484ea6862a142a14b7ac5057c74a # v2.38.0
        with:
          tool: cargo-clone,cross

      - name: Download and build diesel_cli
        run: |
          cargo clone diesel_cli
          cd diesel_cli
          cat << EOF > Cross.toml
          [target.aarch64-unknown-linux-gnu]
          pre-build = [
              "dpkg --add-architecture arm64",
              "apt-get update && apt-get install --assume-yes libpq-dev:arm64"
          ]
          [target.x86_64-unknown-linux-gnu]
          pre-build = [
              "dpkg --add-architecture amd64",
              "apt-get update && apt-get install --assume-yes libpq-dev:amd64"
          ]
          EOF
          cross build --release --target ${{ matrix.rust_arch }} --no-default-features --features "postgres, sqlite-bundled"
          mv target/${{ matrix.rust_arch }}/release/diesel target/diesel.${{ matrix.docker_arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: artifact-diesel-${{ matrix.rust_arch }}
          path: diesel_cli/target/diesel.${{ matrix.docker_arch }}
          if-no-files-found: error

  prebuild-cargo-llvm-lines:
    strategy:
      matrix:
        include:
          - rust_arch: aarch64-unknown-linux-gnu
            docker_arch: arm64
          - rust_arch: x86_64-unknown-linux-gnu
            docker_arch: amd64
    runs-on: ubuntu-latest
    steps:
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@d8352f6b1d2e870bc5716e7a6d9b65c4cc244a1a
        with:
          toolchain: stable

      - name: Install development tools
        uses: taiki-e/install-action@d0c2bb4cffa2484ea6862a142a14b7ac5057c74a # v2.38.0
        with:
          tool: cargo-clone,cross

      - name: Download and build cargo-llvm-lines
        run: |
          cargo clone cargo-llvm-lines
          cd cargo-llvm-lines
          cross build --release --target ${{ matrix.rust_arch }}
          mv target/${{ matrix.rust_arch }}/release/cargo-llvm-lines target/cargo-llvm-lines.${{ matrix.docker_arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: artifact-cargo-llvm-lines-${{ matrix.rust_arch }}
          path: cargo-llvm-lines/target/cargo-llvm-lines.${{ matrix.docker_arch }}
          if-no-files-found: error

  build:
    needs: [prebuild-diesel, prebuild-cargo-llvm-lines]
    env:
      node_version: "20"
    strategy:
      matrix:
        include:
          - version: stable
            latest: false
          - version: beta
            latest: false
          - version: nightly
            latest: false
          - version: 1.78
            latest: true
          - version: 1.77
            latest: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6

      - name: Download prebuild binaries
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        with:
          pattern: artifact-*
          merge-multiple: true

      - name: Build base image
        uses: tweedegolf/build-container-image@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          push: ${{ github.ref == 'refs/heads/main' }}
          platforms: "linux/amd64,linux/arm64"
          build-args: |
            RUSTUP_VERSION=1.27.1
            RUSTUP_SHA256_AMD64=6aeece6993e902708983b209d04c0d1dbb14ebb405ddb87def578d41f920f56d
            RUSTUP_SHA256_ARM64=1cffbf51e63e634c746f741de50649bbbcbd9dbe1de363c9ecef64e278dba2b2
            CARGO_BINSTALL_VERSION=1.6.8
            CARGO_BINSTALL_SHA256_AMD64=581eb7c97b2767a468afb0505c416eb727b469c029b36470288fc30b26517101
            CARGO_BINSTALL_SHA256_ARM64=2433118983ade85388be17d442b430c4932eb2dad834143f9a6a25646563281f
            SCCACHE_VERSION=0.8.1
            SCCACHE_SHA256_AMD64=e0ee621fb16b6940666cd770b091c62cadafd3e062dd12e3a49d9caaff3b795f
            SCCACHE_SHA256_ARM64=452cef732b24415493a7c6bca6e13536eb9464593fa87c753b6b7cb4733e9c50
            CARGO_UDEPS_VERSION=0.1.47
            CARGO_UDEPS_SHA256_AMD64=906d6f7292231b79d2db04ab04d5e188b6ac789bce7fbb3013130edb82f683c9
            CARGO_UDEPS_SHA256_ARM64=b242da4b7c24c647e210fbacabafe7dd86161d04e261bd81ed07a0a466a06fee
            RUST_VERSION=${{matrix.version}}
          tags: |
            ghcr.io/tweedegolf/rust-dev:${{matrix.version}}
            ${{ matrix.latest && 'ghcr.io/tweedegolf/rust-dev:latest' || '' }}

      - name: Build node.js image variant
        uses: tweedegolf/build-container-image@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          push: ${{ github.ref == 'refs/heads/main' }}
          platforms: "linux/amd64,linux/arm64"
          file: Dockerfile-node
          build-args: |
            RUST_VERSION=${{matrix.version}}
            NODE_VERSION=${{env.node_version}}
          tags: |
            ghcr.io/tweedegolf/rust-dev:${{matrix.version}}-node
            ${{ matrix.latest && 'ghcr.io/tweedegolf/rust-dev:latest-node' || '' }}
