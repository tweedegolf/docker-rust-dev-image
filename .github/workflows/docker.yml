name: Docker

on:
  workflow_call:

jobs:
  prebuild-diesel:
    strategy:
      matrix:
        include:
          - rust_arch: aarch64-unknown-linux-gnu
            docker_arch: arm64
          - rust_arch: x86_64-unknown-linux-gnu
            docker_arch: amd64
    runs-on: ubuntu-latest
    steps:
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@7164405e8653277d57afd42ba081b5aa02a70396
        with:
          toolchain: stable

      - name: Install development tools
        uses: taiki-e/install-action@f8a64c940979268d3ab5ac99c178e718ed90977d # v2.32.14
        with:
          tool: cargo-clone,cross

      - name: Download and build diesel_cli
        run: |
          cargo clone diesel_cli
          cd diesel_cli
          cat << EOF > Cross.toml
          [target.aarch64-unknown-linux-gnu]
          pre-build = [
              "dpkg --add-architecture arm64",
              "apt-get update && apt-get install --assume-yes libpq-dev:arm64"
          ]
          [target.x86_64-unknown-linux-gnu]
          pre-build = [
              "dpkg --add-architecture amd64",
              "apt-get update && apt-get install --assume-yes libpq-dev:amd64"
          ]
          EOF
          cross build --release --target ${{ matrix.rust_arch }} --no-default-features --features "postgres, sqlite-bundled"
          mv target/${{ matrix.rust_arch }}/release/diesel target/diesel.${{ matrix.docker_arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@1746f4ab65b179e0ea60a494b83293b640dd5bba # v4.3.2
        with:
          name: artifact-diesel-${{ matrix.rust_arch }}
          path: diesel_cli/target/diesel.${{ matrix.docker_arch }}
          if-no-files-found: error

  prebuild-cargo-llvm-lines:
    strategy:
      matrix:
        include:
          - rust_arch: aarch64-unknown-linux-gnu
            docker_arch: arm64
          - rust_arch: x86_64-unknown-linux-gnu
            docker_arch: amd64
    runs-on: ubuntu-latest
    steps:
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@7164405e8653277d57afd42ba081b5aa02a70396
        with:
          toolchain: stable

      - name: Install development tools
        uses: taiki-e/install-action@f8a64c940979268d3ab5ac99c178e718ed90977d # v2.32.14
        with:
          tool: cargo-clone,cross

      - name: Download and build cargo-llvm-lines
        run: |
          cargo clone cargo-llvm-lines
          cd cargo-llvm-lines
          cross build --release --target ${{ matrix.rust_arch }}
          mv target/${{ matrix.rust_arch }}/release/cargo-llvm-lines target/cargo-llvm-lines.${{ matrix.docker_arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@1746f4ab65b179e0ea60a494b83293b640dd5bba # v4.3.2
        with:
          name: artifact-cargo-llvm-lines-${{ matrix.rust_arch }}
          path: cargo-llvm-lines/target/cargo-llvm-lines.${{ matrix.docker_arch }}
          if-no-files-found: error

  build:
    needs: [prebuild-diesel, prebuild-cargo-llvm-lines]
    strategy:
      matrix:
        include:
          - version: stable
            latest: false
          - version: beta
            latest: false
          - version: nightly
            latest: false
          - version: 1.77
            latest: true
          - version: 1.76
            latest: false
    uses: "./.github/workflows/docker-images.yml"
    with:
        version: ${{ matrix.version }}
        latest: ${{ matrix.latest }}
        node_version: "20"
