name: Docker

on:
  workflow_call:

jobs:
  prebuild_binaries:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@7164405e8653277d57afd42ba081b5aa02a70396
        with:
          toolchain: stable
          targets: x86_64-unknown-linux-gnu,aarch64-unknown-linux-gnu

      - name: Install development tools
        uses: taiki-e/install-action@f8a64c940979268d3ab5ac99c178e718ed90977d # v2.32.14
        with:
          tool: cargo-clone,cross

      - name: Download and build diesel_cli
        run: |
          cargo clone diesel_cli
          cd diesel_cli
          cat << EOF > Cross.toml
          [target.aarch64-unknown-linux-gnu]
          pre-build = [
              "dpkg --add-architecture arm64",
              "apt-get update && apt-get install --assume-yes libpq-dev:arm64"
          ]
          [target.x86_64-unknown-linux-gnu]
          pre-build = [
              "dpkg --add-architecture amd64",
              "apt-get update && apt-get install --assume-yes libpq-dev:amd64"
          ]
          EOF
          cross build --target aarch64-unknown-linux-gnu --no-default-features --features "postgres, sqlite-bundled"
          cross build --target x86_64-unknown-linux-gnu --no-default-features --features "postgres, sqlite-bundled"

  # build:
  #   strategy:
  #     matrix:
  #       include:
  #         - version: stable
  #           latest: false
  #         - version: beta
  #           latest: false
  #         - version: nightly
  #           latest: false
  #         - version: 1.77
  #           latest: true
  #         - version: 1.76
  #           latest: false
  #   uses: "./.github/workflows/docker-images.yml"
  #   with:
  #       version: ${{ matrix.version }}
  #       latest: ${{ matrix.latest }}
  #       node_version: "20"
