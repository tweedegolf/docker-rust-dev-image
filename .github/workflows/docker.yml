name: Docker

on:
  workflow_call:

jobs:
  prebuild-diesel:
    strategy:
      matrix:
        include:
          - rust_arch: aarch64-unknown-linux-gnu
            docker_arch: arm64
          - rust_arch: x86_64-unknown-linux-gnu
            docker_arch: amd64
    runs-on: ubuntu-latest
    steps:
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@21dc36fb71dd22e3317045c0c31a3f4249868b17
        with:
          toolchain: stable

      - name: Install development tools
        uses: taiki-e/install-action@37461a1de4134bec919a737ee9ba018e72011b7c # v2.42.4
        with:
          tool: cargo-clone,cross

      - name: Download and build diesel_cli
        run: |
          cargo clone diesel_cli
          cd diesel_cli
          cat << EOF > Cross.toml
          [target.aarch64-unknown-linux-gnu]
          pre-build = [
              "dpkg --add-architecture arm64",
              "apt-get update && apt-get install --assume-yes libpq-dev:arm64"
          ]
          [target.x86_64-unknown-linux-gnu]
          pre-build = [
              "dpkg --add-architecture amd64",
              "apt-get update && apt-get install --assume-yes libpq-dev:amd64"
          ]
          EOF
          cross build --release --target ${{ matrix.rust_arch }} --no-default-features --features "postgres, sqlite-bundled"
          mv target/${{ matrix.rust_arch }}/release/diesel target/diesel.${{ matrix.docker_arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: artifact-diesel-${{ matrix.rust_arch }}
          path: diesel_cli/target/diesel.${{ matrix.docker_arch }}
          if-no-files-found: error

  prebuild-cargo-llvm-lines:
    strategy:
      matrix:
        include:
          - rust_arch: aarch64-unknown-linux-gnu
            docker_arch: arm64
          - rust_arch: x86_64-unknown-linux-gnu
            docker_arch: amd64
    runs-on: ubuntu-latest
    steps:
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@21dc36fb71dd22e3317045c0c31a3f4249868b17
        with:
          toolchain: stable

      - name: Install development tools
        uses: taiki-e/install-action@37461a1de4134bec919a737ee9ba018e72011b7c # v2.42.4
        with:
          tool: cargo-clone,cross

      - name: Download and build cargo-llvm-lines
        run: |
          cargo clone cargo-llvm-lines
          cd cargo-llvm-lines
          cross build --release --target ${{ matrix.rust_arch }}
          mv target/${{ matrix.rust_arch }}/release/cargo-llvm-lines target/cargo-llvm-lines.${{ matrix.docker_arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: artifact-cargo-llvm-lines-${{ matrix.rust_arch }}
          path: cargo-llvm-lines/target/cargo-llvm-lines.${{ matrix.docker_arch }}
          if-no-files-found: error

  build:
    needs: [prebuild-diesel, prebuild-cargo-llvm-lines]
    env:
      node_version: "20"
    strategy:
      matrix:
        include:
          - version: stable
            latest: false
          - version: beta
            latest: false
          - version: nightly
            latest: false
          - version: "1.80"
            latest: true
          - version: "1.79"
            latest: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Download prebuild binaries
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          pattern: artifact-*
          merge-multiple: true

      - name: Build base image
        uses: tweedegolf/build-container-image@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          push: ${{ github.ref == 'refs/heads/main' }}
          platforms: "linux/amd64,linux/arm64"
          # Rustup version extracted from docker images on https://github.com/rust-lang/docker-rust
          # Cargo-binstall (non-full) version from https://github.com/cargo-bins/cargo-binstall/releases
          # Sccache version from https://github.com/mozilla/sccache/releases
          # Cargo-udeps version from https://github.com/est31/cargo-udeps/releases
          # All packages use x86_64-unknown-linux-musl and aarch64-unknown-linux-musl
          build-args: |
            RUSTUP_VERSION=1.27.1
            RUSTUP_SHA256_AMD64=6aeece6993e902708983b209d04c0d1dbb14ebb405ddb87def578d41f920f56d
            RUSTUP_SHA256_ARM64=1cffbf51e63e634c746f741de50649bbbcbd9dbe1de363c9ecef64e278dba2b2
            CARGO_BINSTALL_VERSION=1.8.0
            CARGO_BINSTALL_SHA256_AMD64=8c771946367345f875634f72f10687f9fd737ac5e83cbbc2a132c1db0b3c508b
            CARGO_BINSTALL_SHA256_ARM64=5f3c3d9cfe17fc225d2733b4ec82d002161c509cf7eb2415d2b01770bc68d0c3
            SCCACHE_VERSION=0.8.1
            SCCACHE_SHA256_AMD64=e0ee621fb16b6940666cd770b091c62cadafd3e062dd12e3a49d9caaff3b795f
            SCCACHE_SHA256_ARM64=452cef732b24415493a7c6bca6e13536eb9464593fa87c753b6b7cb4733e9c50
            CARGO_UDEPS_VERSION=0.1.49
            CARGO_UDEPS_SHA256_AMD64=6560e6c3552aad9e0fc8f22e5da037dda9bf59679b24ac356e52ca3a39643cf9
            CARGO_UDEPS_SHA256_ARM64=060fa3900ec5b6644351887b7fd649dcf89e425cb0926f704b24914474d760ce
            RUST_VERSION=${{matrix.version}}
          tags: |
            ghcr.io/tweedegolf/rust-dev:${{matrix.version}}
            ${{ matrix.latest && 'ghcr.io/tweedegolf/rust-dev:latest' || '' }}

      - name: Build node.js image variant
        uses: tweedegolf/build-container-image@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          push: ${{ github.ref == 'refs/heads/main' }}
          platforms: "linux/amd64,linux/arm64"
          file: Dockerfile-node
          build-args: |
            RUST_VERSION=${{matrix.version}}
            NODE_VERSION=${{env.node_version}}
          tags: |
            ghcr.io/tweedegolf/rust-dev:${{matrix.version}}-node
            ${{ matrix.latest && 'ghcr.io/tweedegolf/rust-dev:latest-node' || '' }}

      - name: Build browser testing image variant
        uses: tweedegolf/build-container-image@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          push: ${{ github.ref == 'refs/heads/main' }}
          platforms: "linux/amd64,linux/arm64"
          file: Dockerfile-browser
          build-args: |
            RUST_VERSION=${{matrix.version}}
          tags: |
            ghcr.io/tweedegolf/rust-dev:${{matrix.version}}-browser
            ${{ matrix.latest && 'ghcr.io/tweedegolf/rust-dev:latest-browser' || '' }}
