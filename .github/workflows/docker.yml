name: Docker

on:
  workflow_call:

jobs:
  prebuild-diesel:
    strategy:
      matrix:
        include:
          - rust_arch: aarch64-unknown-linux-musl
            docker_arch: arm64
          - rust_arch: x86_64-unknown-linux-musl
            docker_arch: amd64
    runs-on: ubuntu-latest
    steps:
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@a54c7afa936fefeb4456b2dd8068152669aa8203
        with:
          toolchain: stable

      - name: Install development tools
        uses: taiki-e/install-action@2c41309d51ede152b6f2ee6bf3b71e6dc9a8b7df # v2.49.27
        with:
          tool: cargo-clone,cross

      - name: Download and build diesel_cli
        run: |
          cargo clone diesel_cli
          cd diesel_cli
          cross build --release --target ${{ matrix.rust_arch }} --no-default-features --features "postgres-bundled, sqlite-bundled"
          mv target/${{ matrix.rust_arch }}/release/diesel target/diesel.${{ matrix.docker_arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: artifact-diesel-${{ matrix.rust_arch }}
          path: diesel_cli/target/diesel.${{ matrix.docker_arch }}
          if-no-files-found: error

  prebuild-cargo-llvm-lines:
    strategy:
      matrix:
        include:
          - rust_arch: aarch64-unknown-linux-musl
            docker_arch: arm64
          - rust_arch: x86_64-unknown-linux-musl
            docker_arch: amd64
    runs-on: ubuntu-latest
    steps:
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@a54c7afa936fefeb4456b2dd8068152669aa8203
        with:
          toolchain: stable

      - name: Install development tools
        uses: taiki-e/install-action@2c41309d51ede152b6f2ee6bf3b71e6dc9a8b7df # v2.49.27
        with:
          tool: cargo-clone,cross

      - name: Download and build cargo-llvm-lines
        run: |
          cargo clone cargo-llvm-lines
          cd cargo-llvm-lines
          cross build --release --target ${{ matrix.rust_arch }}
          mv target/${{ matrix.rust_arch }}/release/cargo-llvm-lines target/cargo-llvm-lines.${{ matrix.docker_arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: artifact-cargo-llvm-lines-${{ matrix.rust_arch }}
          path: cargo-llvm-lines/target/cargo-llvm-lines.${{ matrix.docker_arch }}
          if-no-files-found: error

  build:
    needs: [prebuild-diesel, prebuild-cargo-llvm-lines]
    env:
      node_version: "22"
    strategy:
      matrix:
        include:
          - version: stable
            latest: false
          - version: beta
            latest: false
          - version: nightly
            latest: false
          - version: "1.85"
            latest: true
          - version: "1.84"
            latest: false
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Download prebuild binaries
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          pattern: artifact-*
          merge-multiple: true

      - name: Build base image
        uses: tweedegolf/build-container-image@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          push: ${{ github.ref == 'refs/heads/main' }}
          platforms: "linux/amd64,linux/arm64"
          # Rustup version extracted from docker images on https://github.com/rust-lang/docker-rust
          # Cargo-binstall (non-full) version from https://github.com/cargo-bins/cargo-binstall/releases
          # Sccache version from https://github.com/mozilla/sccache/releases
          # Cargo-udeps version from https://github.com/est31/cargo-udeps/releases
          # All packages use x86_64-unknown-linux-musl and aarch64-unknown-linux-musl
          build-args: |
            RUSTUP_VERSION=1.27.1
            RUSTUP_SHA256_AMD64=6aeece6993e902708983b209d04c0d1dbb14ebb405ddb87def578d41f920f56d
            RUSTUP_SHA256_ARM64=1cffbf51e63e634c746f741de50649bbbcbd9dbe1de363c9ecef64e278dba2b2
            CARGO_BINSTALL_VERSION=1.11.2
            CARGO_BINSTALL_SHA256_AMD64=ea9ce8f0b4139aaa7f8cce03fb0e54f206a6a9d0b8e2e586dfae99d4a92c3fa0
            CARGO_BINSTALL_SHA256_ARM64=e346df04a676ddfe46f4b900507d7d844a472182dd0c849c582b786be971be6a
            SCCACHE_VERSION=0.10.0
            SCCACHE_SHA256_AMD64=1fbb35e135660d04a2d5e42b59c7874d39b3deb17de56330b25b713ec59f849b
            SCCACHE_SHA256_ARM64=d6a1ce4acd02b937cd61bc675a8be029a60f7bc167594c33d75732bbc0a07400
            CARGO_UDEPS_VERSION=0.1.55
            CARGO_UDEPS_SHA256_AMD64=63b9dd69eef610477ead31a02a8262ec321a0e0272080c8db60d547233b2b55f
            CARGO_UDEPS_SHA256_ARM64=a7b554ce1ad67e7e2c7679496c6bc4e57e35a36be50300670314fa3879405b2a
            RUST_VERSION=${{matrix.version}}
          tags: |
            ghcr.io/tweedegolf/rust-dev:${{matrix.version}}
            ${{ matrix.latest && 'ghcr.io/tweedegolf/rust-dev:latest' || '' }}

      - name: Build node.js image variant
        uses: tweedegolf/build-container-image@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          push: ${{ github.ref == 'refs/heads/main' }}
          platforms: "linux/amd64,linux/arm64"
          file: Dockerfile-node
          build-args: |
            RUST_VERSION=${{matrix.version}}
            NODE_VERSION=${{env.node_version}}
          tags: |
            ghcr.io/tweedegolf/rust-dev:${{matrix.version}}-node
            ${{ matrix.latest && 'ghcr.io/tweedegolf/rust-dev:latest-node' || '' }}

      - name: Build browser testing image variant
        uses: tweedegolf/build-container-image@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          push: ${{ github.ref == 'refs/heads/main' }}
          platforms: "linux/amd64,linux/arm64"
          file: Dockerfile-browser
          build-args: |
            RUST_VERSION=${{matrix.version}}
          tags: |
            ghcr.io/tweedegolf/rust-dev:${{matrix.version}}-browser
            ${{ matrix.latest && 'ghcr.io/tweedegolf/rust-dev:latest-browser' || '' }}
